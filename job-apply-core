#! /bin/bash 
shopt -s expand_aliases

list(){
    if [ -n "$job_apply_path" ]; then 
	ls -l "$job_apply_path/applications/$1" | grep '^d' | rev | awk '{print $1}' | rev 
    else 
	>&2 echo "/*** Specify the root directory by executing the command 'def-root on the root directory of the project ***/"
    fi
}

create(){
    firm=$(echo ${1// /_}) 
    application=$(echo ${2// /_}) 
    if [ -z "$1" ] ;then 
	>&2 echo "/** missing input: create [firm] **/"
	return 1
    fi
    mkdir "$job_apply_path"/applications 2>/dev/null
    mkdir "$job_apply_path"/applications/$firm 2> /dev/null
    mkdir "$job_apply_path"/applications/$firm/$application 2> /dev/null 
    mkdir "$job_apply_path"/applications/$firm/$application/src 2>/dev/null
    mkdir "$job_apply_path"/applications/$firm/$application/target 2>/dev/null
    mkdir "$job_apply_path"/applications/$firm/$application/build 2>/dev/null

    echo "> application dir created." 

    cp "$job_apply_path"/.src/template_cover_letter.tex "$job_apply_path"/applications/$firm/$application/src/cover_letter.tex 
    echo "> template cover letter coppied."

    xsltproc --output "$job_apply_path"/applications/$firm/$application/src/configs.xml "$job_apply_path"/.src/conf.xslt "$job_apply_path"/configs/default_configs.xml
    
    echo "> configuration generated."

    cp "$job_apply_path"/.src/to_latex.xslt "$job_apply_path"/applications/$firm/$application/src 
    echo "> xslt to latex copied."

    cp "$job_apply_path"/.src/run.sh "$job_apply_path"/applications/$firm/$application/src
    cp "$job_apply_path"/.src/README.md "$job_apply_path"/applications/$firm/$application/src

    echo "> finished."

return 0
}


go() {
    if [ -z "$1" ] || [ -z "$2" ]; then 
	>&2 echo "/** missing input: go [firm] [position] **/"
	return 1
    fi
    cd "$job_apply_path"/applications/$1/$2/src 
}

build() {
    if [ -z "$1" ] || [ -z "$2" ]; then 
	>&2 echo "/** missing input: build [firm] [position] **/"
	return 1
    fi
    cd "$job_apply_path"/applications/$1/$2/src ; bash run.sh 
}
preview() {
    if [ -z "$1" ] || [ -z "$2" ]; then 
	>&2 echo "/** missing input: preview [firm] [position] **/"
	return 1
    fi
    open -F  -a Preview "$job_apply_path"/applications/$1/$2/target/cover_letter.pdf
}

config(){
    if [ -z "$1" ] || [ -z "$2" ]; then 
	>&2 echo "/** missing input: config [firm] [position] **/"
	return 1
    fi
    vim "$job_apply_path"/applications/$1/$2/src/configs.xml 
}

# I don't think the while is usefull in this setup
while true; do
  case "$1" in
    -v | --verbose ) VERBOSE=true; shift ;;
    -h | --help ) echo "-hlcgbp:, --verbose,--help,--list, --create, --go, --build, --preview"; HELP=true; shift ;;
    -l | --list)  list "$2" ; break ;;
    -c | --create) create "$2" "$3";  break ;;
    -g | --go) go "$2" "$3"; break;; 
    -b | --build) build "$2" "$3" ; break;; 
    -p | --preview) preview "$2" "$3" ; break;; 
    -f | --config) config "$2" "$3"; break;;
    -- ) shift; break ;;
    * ) break ;;
  esac
done

